}
plot(1:308,et,pch=".")
lambda <- 0.1
et[1] <- (1-lambda)*mean(trans_flag) + lambda*trans_flag[1]
for(i in 2:308){
et[i] <- (1-lambda)*et[i-1] + lambda*trans_flag[i]
}
plot(1:308,et,pch=".")
plot(1:308,et,pch="l.")
plot(1:308,et,pch="l")
plot(1:308,et,'l')
mean(et)
sd(et)
low <- mean(et)-1.96*sd(et)
up <- ean(et)+1.96*sd(et)
up <- mean(et)+1.96*sd(et)
?lines
lines(x=0,y=0.1)
plot(1:308,et,'l')
lines(x=0,y=0.1)
abline(a=0.1,b=0)
abline(a=up,b=0,col='r')
abline(a=up,b=0,col='red')
plot(1:308,et,'l')
abline(a=up,b=0,col='red')
abline(a=low,b=0,col='red')
plot(1:308,et,'l',xlab='date',ylab='EWMA stat',main='Control Chart')
abline(a=low,b=0,col='red')
abline(a=up,b=0,col='red')
abline(a=mean(et),b=0,col='green')
install.packages("dtw")
library("dtw")
?dtw
idx <- seq(0,6.28,len=100)
query<-sin(idx)+runif(100)/10;
?runif
plot(idx,query)
reference<-cos(idx)
plot(reference); lines(query,col="blue");
alignment<-dtw(query,reference);
plot(alignment$index1,alignment$index2,main="Warping function");
lines(1:100-25,col="red")
plot(alignment$index1,alignment$index2,main="Warping function");
index1
alignment$index1
alignment$index2
plot(idx,query)
plot(reference); lines(query,col="blue");
idx <- seq(0,6.28,len=100)
query<-sin(idx)+runif(100)/10;
reference<-cos(idx)
plot(reference); lines(query,col="blue");
alignment<-dtw(query,reference);
library("dtw")
alignment<-dtw(query,reference);
alignment$indx1
alignment$index1
alignment$index2
?dtw
sc <- read.table('.synthetic_control.data',header=F,sep=' ')
sc <- read.table('./synthetic_control.data',header=F,sep=' ')
sc <- read.table('./synthetic_control.data',header=F,sep=' ')
sc <- read.table('.\synthetic_control.data',header=F,sep=' ')
sc <- read.table('synthetic_control.data',header=F,sep=' ')
sc <- read.table('/Users/SONG/Documents/synthetic_control.data',header=F,sep=' ')
sc <- read.table('/Users/SONG/Documents/synthetic_control.data',header=F,sep='')
sc <- read.table('./synthetic_control.data',header=F,sep=' ')
n <- 10
sc <- read.table('synthetic_control.data',header=F,sep=' ')
sc <- read.table('/Users/SONG/Desktop/Research/curve_clustering/synthetic_control.data',header=F,sep=' ')
sc <- read.table('/Users/SONG/Desktop/Research/curve_clustering/synthetic_control.data',header=F,sep='')
n <- 10
s <- sample(1:100,n)
idx <- c(s, 100+s, 200+s, 300+s, 400+s, 500+s)
sample2 <- sc[idx,]
observedLabels <- c(rep(1,n), rep(2,n), rep(3,n), rep(4,n), rep(5,n), rep(6,n))
library(dtw)
distMatrix <- dist(sample2, method=”DTW”)
distMatrix <- dist(sample2, method="DTW")
hc <- hclust(distMatrix, method=”average”)
plot(hc, labels=observedLabels, main="")
hc <- hclust(distMatrix, method="average")
plot(hc, labels=observedLabels, main="")
View(sc)
plot(1:60,sc[1,])
plot(1:60,sc[2,])
plot(1:60,sc[101,])
plot(1:60,sc[102,])
plot(1:60,sc[102,],'l')
plot(1:60,sc[103,],'l')
plot(1:60,sc[3,],'l')
plot(1:60,sc[203,],'l')
plot(1:60,sc[303,],'l')
plot(1:60,sc[403,],'l')
plot(1:60,sc[503,],'l')
plot(1:60,sc[600,],'l')
sc <- read.table('/Users/SONG/Desktop/Research/curve_clustering/synthetic_control.data',header=F,sep='')
n <- 100
s <- sample(1:100,n)
idx <- c(s, 100+s, 200+s, 300+s, 400+s, 500+s)
sample2 <- sc[idx,]
observedLabels <- c(rep(1,n), rep(2,n), rep(3,n), rep(4,n), rep(5,n), rep(6,n))
library(dtw)
distMatrix <- dist(sample2, method="DTW")
hc <- hclust(distMatrix, method="average")
plot(hc, labels=observedLabels, main="")
plot(1:60,sc[600,],'l')
lines(sc[500,])
plot(1:60,sc[600,],'l')
lines(sc[500,])
plot(sc[600,],'l')
plot(sc[600,])
plot(1:60,sc[600,])
lines(1:60,sc[500,])
lines(1:60,sc[500,])
plot(1:60,sc[400,])
lines(1:60,sc[500,])
plot(1:60,sc[400,],'l')
lines(1:60,sc[401,])
lines(1:60,sc[402,])
lines(1:60,sc[302,])
lines(1:60,sc[301,])
plot(1:60,sc[400,],'l')
lines(1:60,sc[301,])
?hclust
hc <- hclust(distMatrix, method="median")
plot(hc, labels=observedLabels, main="")
?hclust
hc <- hclust(distMatrix, method="centroid")
plot(hc, labels=observedLabels, main="")
n <- 20
s <- sample(1:100,n)
idx <- c(s, 100+s, 200+s, 300+s, 400+s, 500+s)
sample2 <- sc[idx,]
observedLabels <- c(rep(1,n), rep(2,n), rep(3,n), rep(4,n), rep(5,n), rep(6,n))
library(dtw)
distMatrix <- dist(sample2, method="DTW")
hc <- hclust(distMatrix, method="centroid")
plot(hc, labels=observedLabels, main="")
hc <- hclust(distMatrix, method="mean")
?hclust
hc <- hclust(distMatrix, method="average")
plot(hc, labels=observedLabels, main="")
library('cluster')
res <- pam(distMatrix)
res <- pam(distMatrix,6)
res
res[1:20]
res==1
find(res,1)
res
res$clustering
res$clustering == 1
res$clustering[1:20]
res$clustering[21:40]
res$clustering[41:60]
res$clustering[61:80]
res$clustering[81:100]
plot(1:60,cs[489,])
plot(1:60,sc[489,],'l')
lines(sc[471,])
plot(1:60,sc[489,],'l')
lines(sc[471,])
lines(1:60,sc[471,])
plot(1:60,sc[489,],'l')
lines(1:60,sc[471,])
res$clustering[101:120]
res$clustering
find(res,1)
?find
find(res)
find(1,res)
match(1,res)
which(res = 1)
which(res == 1)
which(res %in% c(1,1))
which(res %in% c(1,2))
which(res %in% c(2,4))
res == 1
which(res$clustering==1)
which(res$clustering==2)
which(res$clustering==3)
which(res$clustering==4)
which(res$clustering==5)
which(res$clustering==6)
which(res$clustering==4 or res$clustering==6)
which(res$clustering==4 OR res$clustering==6)
which(res$clustering==c(4,6))
plot(1:60,sc[346,],'l')
lines(1:60,sc[556,],'l')
plot(1:60,sc[306,],'l')
lines(1:60,sc[556,],'l')
plot(1:60,sc[306,],'l',col='r')
plot(1:60,sc[306,],'l',col='red')
lines(1:60,sc[556,],'l',col='blue')
plot(1:60,sc[306,],'l',col='red')
lines(1:60,sc[530,],'l',col='blue')
plot(1:60,sc[306,],'l',col='red')
lines(1:60,sc[464,],'l',col='blue')
plot(1:60,sc[306,],'l',col='red',ylim=c(10,40))
lines(1:60,sc[464,],'l',col='blue')
plot(1:60,sc[306,],'l',col='red',ylim=c(10,50))
lines(1:60,sc[464,],'l',col='blue')
plot(1:60,sc[306,],'l',col='red',ylim=c(10,60))
lines(1:60,sc[464,],'l',col='blue')
plot(1:60,sc[306,],'l',col='red',ylim=c(10,60))
lines(1:60,sc[455,],'l',col='blue')
plot(1:60,sc[71,],'l',col='red',ylim=c(10,60))
lines(1:60,sc[455,],'l',col='blue')
plot(1:60,sc[204,],'l',col='red',ylim=c(10,60))
lines(1:60,sc[455,],'l',col='blue')
plot(1:60,sc[505,],'l',col='red',ylim=c(10,60))
lines(1:60,sc[455,],'l',col='blue')
plot(1:60,sc[505,],'l',col='red',ylim=c(10,60))
lines(1:60,sc[355,],'l',col='blue')
?pam
silhouette(res)
summary(silhouette(res))
plot.partition(res)
res <- pam(distMatrix,5)
res$clustering
which(res$clustering==1)
which(res$clustering==2)
which(res$clustering==3)
which(res$clustering==4)
which(res$clustering==5)
plot(1:60,sc[484,],'l',col='red')
lines(1:60,sc[406,],col='blue')
lines(1:60,sc[477,],col='blue')
plot(1:60,sc[484,],'l',col='red')
lines(1:60,sc[477,],col='blue')
plot(1:60,sc[368,],'l',col='red')
lines(1:60,sc[477,],col='blue')
plot(1:60,sc[268,],'l',col='red')
lines(1:60,sc[477,],col='blue')
lines(1:60,sc[430,],col='blue')
plot(1:60,sc[268,],'l',col='red')
lines(1:60,sc[430,],col='blue')
res <- pam(distMatrix,7)
res$clustering
which(res$clustering==5)
which(res$clustering==1)
which(res$clustering==2)
which(res$clustering==3)
which(res$clustering==4)
which(res$clustering==5)
which(res$clustering==6)
which(res$clustering==7)
plot(1:60,sc[303,],'l',col='red')
lines(1:60,sc[430,],col='blue')
res <- pam(distMatrix,6)
res$clustering
which(res$clustering==3)
# example of 'misclassification' 376 -- should be class 3 and 556 -- should be class 5
plot(1:60,sc[376,],'l',col='red')
lines(1:60,sc[556,],col='blue')
date_idx <- c(0, 1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 28, 31, 33, 34, 61, 65, 66, 68, 74, 76, 79, 80, 82, 84, 90, 91, 92, 94, 101, 102, 103, 104, 105, 106, 107, 111, 113, 115, 120, 125, 132, 134, 137, 141, 142, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 163, 165, 166, 167, 168, 169, 173, 177, 182, 185, 186, 188, 189, 191, 193, 194, 196, 199, 200, 202, 204, 205, 207, 208, 209, 212, 213, 216, 218, 220, 221, 222, 224, 225, 229, 231, 234, 236, 238, 240, 243, 246, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 278, 281, 282, 283, 284, 285, 287, 288, 290, 294, 296, 298, 299, 301, 307)
date_idx <- date_idx + 1
trans_flag <- rep(0,308)
trans_flag[date_idx] <- 1
w <- vector()
for(i in 4:305){
w[i-3] <- sum(trans_flag[(i-3):(i+3)])
}
plot(4:305,w,'l')
et <- vector()
lambda <- 0.1
et[1] <- (1-lambda)*mean(trans_flag) + lambda*trans_flag[1]
for(i in 2:308){
et[i] <- (1-lambda)*et[i-1] + lambda*trans_flag[i]
}
plot(1:308,et,'l')
low <- mean(et)-1.96*sd(et)
up <- mean(et)+1.96*sd(et)
plot(1:308,et,'l',xlab='date',ylab='EWMA stat',main='Control Chart')
abline(a=low,b=0,col='red')
abline(a=up,b=0,col='red')
abline(a=mean(et),b=0,col='green')
sc <- read.table('/Users/SONG/Desktop/Research/curve_clustering/synthetic_control.data',header=F,sep='')
n <- 20
s <- sample(1:100,n)
idx <- c(s, 100+s, 200+s, 300+s, 400+s, 500+s)
sample2 <- sc[idx,]
observedLabels <- c(rep(1,n), rep(2,n), rep(3,n), rep(4,n), rep(5,n), rep(6,n))
library(dtw)
distMatrix <- dist(sample2, method="DTW")
hc <- hclust(distMatrix, method="average")
plot(hc, labels=observedLabels, main="")
sc <- read.table('/Users/SONG/Desktop/Research/curve_clustering/synthetic_control.data',header=F,sep='')
n <- 10
s <- sample(1:100,n)
idx <- c(s, 100+s, 200+s, 300+s, 400+s, 500+s)
sample2 <- sc[idx,]
observedLabels <- c(rep(1,n), rep(2,n), rep(3,n), rep(4,n), rep(5,n), rep(6,n))
library(dtw)
distMatrix <- dist(sample2, method="DTW")
hc <- hclust(distMatrix, method="average")
plot(hc, labels=observedLabels, main="")
res$clustering
plot(1:60,sc[468,],'l',col='red')
lines(1:60,sc[556,],col='blue')
plot(1:60,sc[304,],'l',col='red')
lines(1:60,sc[556,],col='blue')
plot(1:60,sc[304,],'l',col='red')
lines(1:60,sc[586,],col='blue')
installed.packages()
amt <- c(405.0, 983.1, 1329.93, 1329.93, 1417.63, 1417.63, 1553.3300000000002, 1651.3300000000002, 1651.3300000000002, 1715.8300000000002, 1766.0300000000002, 1266.0300000000002, 166.0300000000002, 500.9000000000002, 675.2500000000002, 175.25000000000023, 28.950000000000216, 28.950000000000216, -145.04999999999978, -9.349999999999795, 119.6500000000002, 216.1500000000002, 216.1500000000002, 216.1500000000002, 216.1500000000002, 351.6500000000002, 5939.650000000001, 5939.650000000001, 3025.4500000000007, 3025.4500000000007, 3025.4500000000007, 3680.3000000000006, 3680.3000000000006, 3772.2000000000007, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -463.0799999999991, -463.0799999999991, -463.0799999999991, -463.0799999999991, 5124.920000000001, 5374.920000000001, 5374.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5506.720000000001, 5506.720000000001, 2440.130000000001, 2440.130000000001, 2440.130000000001, 7328.130000000001, 6328.130000000001, 6328.130000000001, -671.869999999999, -671.869999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, 4681.160000000001, 5529.960000000001, 5626.560000000001, 5626.560000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 6191.260000000001, 6191.260000000001, 6441.260000000001, 3198.840000000001, 3199.240000000001, 3449.240000000001, 3841.1400000000012, 3841.1400000000012, 3841.1400000000012, 3841.1400000000012, 4091.1400000000012, 4091.1400000000012, 3491.1400000000012, 3741.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5227.630000000001, 5227.630000000001, 128.4900000000007, 128.4900000000007, 128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2263.890000000001, -1736.1099999999992, 5513.890000000001, 5513.890000000001, 6541.890000000001, 6541.890000000001, 4728.000000000001, 4978.000000000001, 5236.800000000001, 5236.800000000001, 5486.800000000001, 5486.800000000001, 250.0000000000009, 7550.000000000001, 7300.000000000001, 6988.000000000001, 6988.000000000001, 7238.000000000001, 7488.000000000001, 7738.000000000001, 7738.000000000001, 7738.000000000001, 250.0000000000009, 250.0000000000009, 1327.0500000000009, -2472.949999999999, 3115.050000000001, 6453.050000000001, 6703.050000000001, 6703.050000000001, 6703.050000000001, 6703.050000000001, 6953.050000000001, 6953.050000000001, 6953.050000000001, 6953.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7453.050000000001, 7453.050000000001, 7453.050000000001, 7503.050000000001, 7753.050000000001, 7753.050000000001, 6953.050000000001, 7203.050000000001, 7203.050000000001, 7323.6500000000015, 7323.6500000000015, 7573.6500000000015, 1170.6000000000013, 1170.6000000000013, 1420.6000000000013, 1420.6000000000013, 1420.6000000000013, 1670.6000000000013, 1920.6000000000013, 1920.6000000000013, 2170.6000000000013, 2170.6000000000013, 2540.550000000001, 3448.150000000001, 3448.150000000001, 3698.150000000001, 3913.450000000001, 7755.450000000001, 7755.450000000001, 7755.450000000001, 6443.450000000001, 6693.450000000001, 6693.450000000001, 6693.450000000001, 6767.6, 6767.6, 7017.6, 7017.6, 7267.6, 7339.400000000001, 7589.400000000001, 7589.400000000001, 1237.9500000000007, 1487.9500000000007, 1487.9500000000007, 1487.9500000000007, 1487.9500000000007, 1737.9500000000007, 1737.9500000000007, 5132.950000000001, 5132.950000000001, 5132.950000000001, 5382.950000000001, 5382.950000000001, 5632.950000000001, 5632.950000000001, 5882.950000000001, 5882.950000000001, 6132.950000000001, 6132.950000000001, 6132.950000000001, 6382.950000000001, 6382.950000000001, 6382.950000000001, 6632.950000000001, 6632.950000000001, 6882.950000000001, 6882.950000000001, 7132.950000000001, 7132.950000000001, 7382.950000000001, 7638.950000000001, 7888.950000000001, 1506.000000000001, 1609.700000000001, 3951.130000000001, 4201.130000000001, 4451.130000000001, 4451.130000000001, 4701.130000000001, 4701.130000000001, 4951.130000000001, 4951.130000000001, 4991.130000000001, 6273.930000000001, 2273.930000000001, 2523.930000000001, 2773.930000000001, 2773.930000000001, 3043.930000000001, 3043.930000000001, 3293.930000000001, 3363.930000000001, 3438.780000000001, 4643.780000000001, 4643.780000000001, 4893.780000000001, 4893.780000000001, 4893.780000000001, 5143.780000000001, 6605.780000000001, 6633.580000000001, 6883.580000000001, 6883.580000000001, 6883.580000000001, 3899.650000000001, 4149.6500000000015, 4149.6500000000015, 4399.6500000000015, 4399.6500000000015, 4399.6500000000015, 4399.6500000000015, 4649.6500000000015, 4649.6500000000015, 4752.050000000001, 4752.050000000001, 5002.050000000001, 5399.050000000001, 5399.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 78.40000000000055, 507.70000000000056)
rm(list=ls())
rm(list=ls())
amt <- c(405.0, 983.1, 1329.93, 1329.93, 1417.63, 1417.63, 1553.3300000000002, 1651.3300000000002, 1651.3300000000002, 1715.8300000000002, 1766.0300000000002, 1266.0300000000002, 166.0300000000002, 500.9000000000002, 675.2500000000002, 175.25000000000023, 28.950000000000216, 28.950000000000216, -145.04999999999978, -9.349999999999795, 119.6500000000002, 216.1500000000002, 216.1500000000002, 216.1500000000002, 216.1500000000002, 351.6500000000002, 5939.650000000001, 5939.650000000001, 3025.4500000000007, 3025.4500000000007, 3025.4500000000007, 3680.3000000000006, 3680.3000000000006, 3772.2000000000007, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -463.0799999999991, -463.0799999999991, -463.0799999999991, -463.0799999999991, 5124.920000000001, 5374.920000000001, 5374.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5506.720000000001, 5506.720000000001, 2440.130000000001, 2440.130000000001, 2440.130000000001, 7328.130000000001, 6328.130000000001, 6328.130000000001, -671.869999999999, -671.869999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, 4681.160000000001, 5529.960000000001, 5626.560000000001, 5626.560000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 6191.260000000001, 6191.260000000001, 6441.260000000001, 3198.840000000001, 3199.240000000001, 3449.240000000001, 3841.1400000000012, 3841.1400000000012, 3841.1400000000012, 3841.1400000000012, 4091.1400000000012, 4091.1400000000012, 3491.1400000000012, 3741.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5227.630000000001, 5227.630000000001, 128.4900000000007, 128.4900000000007, 128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2263.890000000001, -1736.1099999999992, 5513.890000000001, 5513.890000000001, 6541.890000000001, 6541.890000000001, 4728.000000000001, 4978.000000000001, 5236.800000000001, 5236.800000000001, 5486.800000000001, 5486.800000000001, 250.0000000000009, 7550.000000000001, 7300.000000000001, 6988.000000000001, 6988.000000000001, 7238.000000000001, 7488.000000000001, 7738.000000000001, 7738.000000000001, 7738.000000000001, 250.0000000000009, 250.0000000000009, 1327.0500000000009, -2472.949999999999, 3115.050000000001, 6453.050000000001, 6703.050000000001, 6703.050000000001, 6703.050000000001, 6703.050000000001, 6953.050000000001, 6953.050000000001, 6953.050000000001, 6953.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7453.050000000001, 7453.050000000001, 7453.050000000001, 7503.050000000001, 7753.050000000001, 7753.050000000001, 6953.050000000001, 7203.050000000001, 7203.050000000001, 7323.6500000000015, 7323.6500000000015, 7573.6500000000015, 1170.6000000000013, 1170.6000000000013, 1420.6000000000013, 1420.6000000000013, 1420.6000000000013, 1670.6000000000013, 1920.6000000000013, 1920.6000000000013, 2170.6000000000013, 2170.6000000000013, 2540.550000000001, 3448.150000000001, 3448.150000000001, 3698.150000000001, 3913.450000000001, 7755.450000000001, 7755.450000000001, 7755.450000000001, 6443.450000000001, 6693.450000000001, 6693.450000000001, 6693.450000000001, 6767.6, 6767.6, 7017.6, 7017.6, 7267.6, 7339.400000000001, 7589.400000000001, 7589.400000000001, 1237.9500000000007, 1487.9500000000007, 1487.9500000000007, 1487.9500000000007, 1487.9500000000007, 1737.9500000000007, 1737.9500000000007, 5132.950000000001, 5132.950000000001, 5132.950000000001, 5382.950000000001, 5382.950000000001, 5632.950000000001, 5632.950000000001, 5882.950000000001, 5882.950000000001, 6132.950000000001, 6132.950000000001, 6132.950000000001, 6382.950000000001, 6382.950000000001, 6382.950000000001, 6632.950000000001, 6632.950000000001, 6882.950000000001, 6882.950000000001, 7132.950000000001, 7132.950000000001, 7382.950000000001, 7638.950000000001, 7888.950000000001, 1506.000000000001, 1609.700000000001, 3951.130000000001, 4201.130000000001, 4451.130000000001, 4451.130000000001, 4701.130000000001, 4701.130000000001, 4951.130000000001, 4951.130000000001, 4991.130000000001, 6273.930000000001, 2273.930000000001, 2523.930000000001, 2773.930000000001, 2773.930000000001, 3043.930000000001, 3043.930000000001, 3293.930000000001, 3363.930000000001, 3438.780000000001, 4643.780000000001, 4643.780000000001, 4893.780000000001, 4893.780000000001, 4893.780000000001, 5143.780000000001, 6605.780000000001, 6633.580000000001, 6883.580000000001, 6883.580000000001, 6883.580000000001, 3899.650000000001, 4149.6500000000015, 4149.6500000000015, 4399.6500000000015, 4399.6500000000015, 4399.6500000000015, 4399.6500000000015, 4649.6500000000015, 4649.6500000000015, 4752.050000000001, 4752.050000000001, 5002.050000000001, 5399.050000000001, 5399.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 78.40000000000055, 507.70000000000056)
amt <- c(405.0, 983.1, 1329.93, 1329.93, 1417.63, 1417.63, 1553.3300000000002, 1651.3300000000002, 1651.3300000000002, 1715.8300000000002, 1766.0300000000002, 1266.0300000000002, 166.0300000000002, 500.9000000000002, 675.2500000000002, 175.25000000000023, 28.950000000000216, 28.950000000000216, -145.04999999999978, -9.349999999999795, 119.6500000000002, 216.1500000000002, 216.1500000000002, 216.1500000000002, 216.1500000000002, 351.6500000000002, 5939.650000000001, 5939.650000000001, 3025.4500000000007, 3025.4500000000007, 3025.4500000000007, 3680.3000000000006, 3680.3000000000006, 3772.2000000000007, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, 4030.500000000001, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991,
-469.4999999999991, -469.4999999999991, -469.4999999999991, -469.4999999999991, -463.0799999999991, -463.0799999999991, -463.0799999999991, -463.0799999999991, 5124.920000000001, 5374.920000000001, 5374.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5415.920000000001, 5506.720000000001, 5506.720000000001, 2440.130000000001, 2440.130000000001, 2440.130000000001, 7328.130000000001, 6328.130000000001, 6328.130000000001, -671.869999999999, -671.869999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, -6543.739999999999, 4681.160000000001, 5529.960000000001, 5626.560000000001, 5626.560000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 5941.260000000001, 6191.260000000001, 6191.260000000001, 6441.260000000001, 3198.840000000001, 3199.240000000001, 3449.240000000001, 3841.1400000000012, 3841.1400000000012, 3841.1400000000012, 3841.1400000000012,
4091.1400000000012, 4091.1400000000012, 3491.1400000000012, 3741.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 3991.1400000000012, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5099.140000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5187.190000000001, 5227.630000000001, 5227.630000000001, 128.4900000000007, 128.4900000000007, 128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2128.4900000000007, 2263.890000000001, -1736.1099999999992, 5513.890000000001, 5513.890000000001, 6541.890000000001, 6541.890000000001, 4728.000000000001, 4978.000000000001, 5236.800000000001, 5236.800000000001, 5486.800000000001, 5486.800000000001, 250.0000000000009, 7550.000000000001, 7300.000000000001, 6988.000000000001, 6988.000000000001, 7238.000000000001, 7488.000000000001, 7738.000000000001, 7738.000000000001, 7738.000000000001, 250.0000000000009, 250.0000000000009,
1327.0500000000009, -2472.949999999999, 3115.050000000001, 6453.050000000001, 6703.050000000001, 6703.050000000001, 6703.050000000001, 6703.050000000001, 6953.050000000001, 6953.050000000001, 6953.050000000001, 6953.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7203.050000000001, 7453.050000000001, 7453.050000000001, 7453.050000000001, 7503.050000000001, 7753.050000000001, 7753.050000000001, 6953.050000000001, 7203.050000000001, 7203.050000000001, 7323.6500000000015, 7323.6500000000015, 7573.6500000000015, 1170.6000000000013, 1170.6000000000013, 1420.6000000000013, 1420.6000000000013, 1420.6000000000013, 1670.6000000000013, 1920.6000000000013, 1920.6000000000013, 2170.6000000000013, 2170.6000000000013, 2540.550000000001, 3448.150000000001, 3448.150000000001, 3698.150000000001, 3913.450000000001, 7755.450000000001, 7755.450000000001, 7755.450000000001, 6443.450000000001, 6693.450000000001, 6693.450000000001, 6693.450000000001, 6767.6, 6767.6, 7017.6, 7017.6, 7267.6, 7339.400000000001,
7589.400000000001, 7589.400000000001, 1237.9500000000007, 1487.9500000000007, 1487.9500000000007, 1487.9500000000007, 1487.9500000000007, 1737.9500000000007, 1737.9500000000007, 5132.950000000001, 5132.950000000001, 5132.950000000001, 5382.950000000001, 5382.950000000001, 5632.950000000001, 5632.950000000001, 5882.950000000001, 5882.950000000001, 6132.950000000001, 6132.950000000001, 6132.950000000001, 6382.950000000001, 6382.950000000001, 6382.950000000001, 6632.950000000001, 6632.950000000001, 6882.950000000001, 6882.950000000001, 7132.950000000001, 7132.950000000001, 7382.950000000001, 7638.950000000001, 7888.950000000001, 1506.000000000001, 1609.700000000001, 3951.130000000001, 4201.130000000001, 4451.130000000001, 4451.130000000001, 4701.130000000001, 4701.130000000001, 4951.130000000001, 4951.130000000001, 4991.130000000001, 6273.930000000001, 2273.930000000001, 2523.930000000001, 2773.930000000001, 2773.930000000001, 3043.930000000001, 3043.930000000001, 3293.930000000001, 3363.930000000001, 3438.780000000001, 4643.780000000001,
4643.780000000001, 4893.780000000001, 4893.780000000001, 4893.780000000001, 5143.780000000001, 6605.780000000001, 6633.580000000001, 6883.580000000001, 6883.580000000001, 6883.580000000001, 3899.650000000001, 4149.6500000000015, 4149.6500000000015, 4399.6500000000015, 4399.6500000000015, 4399.6500000000015, 4399.6500000000015, 4649.6500000000015, 4649.6500000000015, 4752.050000000001, 4752.050000000001, 5002.050000000001, 5399.050000000001, 5399.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5649.050000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 5727.450000000001, 78.40000000000055, 507.70000000000056)
?read.table
?readLines
amt = readLines('amt.txt')
amt = readLines('amt.txt')
amt = readLines('/Users/SONG/Desktop/Research/credit_card_data/amt.txt')
amt
amt[1]
amt[2]
?lapply
amt = c(405.00, 983.10, 1329.93, 1329.93, 1417.63, 1417.63, 1553.33, 1651.33, 1651.33, 1715.83, 1766.03, 1266.03, 166.03, 500.90, 675.25, 175.25, 28.95, 28.95, -145.05, -9.35, 119.65, 216.15, 216.15, 216.15, 216.15, 351.65, 5939.65, 5939.65, 3025.45, 3025.45, 3025.45, 3680.30, 3680.30, 3772.20, 4030.50, 4030.50, 4030.50, 4030.50, 4030.50, 4030.50, 4030.50, 4030.50, 4030.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -469.50, -463.08, -463.08, -463.08, -463.08, 5124.92, 5374.92, 5374.92, 5415.92, 5415.92, 5415.92, 5415.92, 5415.92, 5415.92, 5506.72, 5506.72, 2440.13, 2440.13, 2440.13, 7328.13, 6328.13, 6328.13, -671.87, -671.87, -6543.74, -6543.74, -6543.74, -6543.74, -6543.74, -6543.74, 4681.16, 5529.96, 5626.56, 5626.56, 5941.26, 5941.26, 5941.26, 5941.26, 5941.26, 5941.26, 5941.26, 6191.26, 6191.26, 6441.26, 3198.84, 3199.24, 3449.24, 3841.14, 3841.14, 3841.14, 3841.14, 4091.14, 4091.14, 3491.14, 3741.14, 3991.14, 3991.14, 3991.14, 3991.14, 3991.14, 5099.14, 5099.14, 5099.14, 5099.14, 5099.14, 5187.19, 5187.19, 5187.19, 5187.19, 5187.19, 5187.19, 5187.19, 5227.63, 5227.63, 128.49, 128.49, 128.49, 2128.49, 2128.49, 2128.49, 2128.49, 2263.89, -1736.11, 5513.89, 5513.89, 6541.89, 6541.89, 4728.00, 4978.00, 5236.80, 5236.80, 5486.80, 5486.80, 250.00, 7550.00, 7300.00, 6988.00, 6988.00, 7238.00, 7488.00, 7738.00, 7738.00, 7738.00, 250.00, 250.00, 1327.05, -2472.95, 3115.05, 6453.05, 6703.05, 6703.05, 6703.05, 6703.05, 6953.05, 6953.05, 6953.05, 6953.05, 7203.05, 7203.05, 7203.05, 7203.05, 7203.05, 7453.05, 7453.05, 7453.05, 7503.05, 7753.05, 7753.05, 6953.05, 7203.05, 7203.05, 7323.65, 7323.65, 7573.65, 1170.60, 1170.60, 1420.60, 1420.60, 1420.60, 1670.60, 1920.60, 1920.60, 2170.60, 2170.60, 2540.55, 3448.15, 3448.15, 3698.15, 3913.45, 7755.45, 7755.45, 7755.45, 6443.45, 6693.45, 6693.45, 6693.45, 6767.60, 6767.60, 7017.60, 7017.60, 7267.60, 7339.40, 7589.40, 7589.40, 1237.95, 1487.95, 1487.95, 1487.95, 1487.95, 1737.95, 1737.95, 5132.95, 5132.95, 5132.95, 5382.95, 5382.95, 5632.95, 5632.95, 5882.95, 5882.95, 6132.95, 6132.95, 6132.95, 6382.95, 6382.95, 6382.95, 6632.95, 6632.95, 6882.95, 6882.95, 7132.95, 7132.95, 7382.95, 7638.95, 7888.95, 1506.00, 1609.70, 3951.13, 4201.13, 4451.13, 4451.13, 4701.13, 4701.13, 4951.13, 4951.13, 4991.13, 6273.93, 2273.93, 2523.93, 2773.93, 2773.93, 3043.93, 3043.93, 3293.93, 3363.93, 3438.78, 4643.78, 4643.78, 4893.78, 4893.78, 4893.78, 5143.78, 6605.78, 6633.58, 6883.58, 6883.58, 6883.58, 3899.65, 4149.65, 4149.65, 4399.65, 4399.65, 4399.65, 4399.65, 4649.65, 4649.65, 4752.05, 4752.05, 5002.05, 5399.05, 5399.05, 5649.05, 5649.05, 5649.05, 5649.05, 5649.05, 5649.05, 5727.45, 5727.45, 5727.45, 5727.45, 5727.45, 5727.45, 5727.45, 5727.45, 5727.45, 5727.45, 78.40, 507.70)
plot(1:319,amt)
plot(1:319,amt,'l')
mean(amt)
sd(amt)
z = vector()
z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
lambda = .8
z = vector()
lambda = .8
z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z)
plot(1:319,z,'l')
z = vector()
lambda = .2
z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
z = vector()
lambda = .5
z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
lambda = .5
z[1] = amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
z = vector()
lambda = .6
# z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
z[1] = amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
z = vector()
lambda = .8
# z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
z[1] = amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
z = vector()
lambda = .2
# z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
z[1] = amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
lambda = 0
# z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
z[1] = amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
spt <- c(405.0, 578.1, 346.83, 0, 87.7, 0, 135.7, 98.0, 0, 64.5, 50.2, -500.0, -1100.0, 334.87, 174.35, -500.0, -146.3, 0, -174.0, 135.7, 129.0, 96.5, 0, 0, 0, 135.5, 5588.0, 0, -2914.2, 0, 0, 654.85, 0, 91.9, 258.3, 0, 0, 0, 0, 0, 0, 0, 0, -4500.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.42, 0, 0, 0, 5588.0, 250.0, 0, 41.0, 0, 0, 0, 0, 0, 90.8, 0, -3066.59, 0, 0, 4888.0, -1000.0, 0, -7000.0, 0, -5871.87, 0, 0, 0, 0, 0, 11224.9, 848.8, 96.6, 0, 314.7, 0, 0, 0, 0, 0, 0, 250.0, 0, 250.0, -3242.42, 0.4, 250.0, 391.9, 0, 0, 0, 250.0, 0, -600.0, 250.0, 250.0, 0, 0, 0, 0, 1108.0, 0, 0, 0, 0, 88.05, 0, 0, 0, 0, 0, 0, 40.44, 0, -5099.14, 0, 0, 2000.0, 0, 0, 0, 135.4, -4000.0, 7250.0, 0, 1028.0, 0, -1813.89, 250.0, 258.8, 0, 250.0, 0, -5236.8, 7300.0, -250.0, -312.0, 0, 250.0, 250.0, 250.0, 0, 0, -7488.0, 0, 1077.05, -3800.0, 5588.0, 3338.0, 250.0, 0, 0, 0, 250.0, 0, 0, 0, 250.0, 0, 0, 0, 0, 250.0, 0, 0, 50.0, 250.0, 0, -800.0, 250.0, 0, 120.6, 0, 250.0, -6403.05, 0, 250.0, 0, 0, 250.0, 250.0, 0, 250.0, 0, 369.95, 907.6, 0, 250.0, 215.3, 3842.0, 0, 0, -1312.0, 250.0, 0, 0, 74.15, 0, 250.0, 0, 250.0, 71.8, 250.0, 0, -6351.45, 250.0, 0, 0, 0, 250.0, 0, 3395.0, 0, 0, 250.0, 0, 250.0, 0, 250.0, 0, 250.0, 0, 0, 250.0, 0, 0, 250.0, 0, 250.0, 0, 250.0, 0, 250.0, 256.0, 250.0, -6382.95, 103.7, 2341.43, 250.0, 250.0, 0, 250.0, 0, 250.0, 0, 40.0, 1282.8, -4000.0, 250.0, 250.0, 0, 270.0, 0, 250.0, 70.0, 74.85, 1205.0, 0, 250.0, 0, 0, 250.0, 1462.0, 27.8, 250.0, 0, 0, -2983.93, 250.0, 0, 250.0, 0, 0, 0, 250.0, 0, 102.4, 0, 250.0, 397.0, 0, 250.0, 0, 0, 0, 0, 0, 78.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5649.05, 429.3)
plot(1:319,spt,'l')
plot(1:319,z,'l')
plot(1:319,spt,'l')
?fft
fft(spt)
fft(spt)
f = fft(z)
abs(f)
hist(abs(f),20)
sum(abs(f)>200000)
which(abs(f)>200000)
f[which(abs(f)<200000)]=0
f
fft(f,inverse=TRUE)
fft(f,inverse=TRUE)/length(f)
abs(fft(f,inverse=TRUE)/length(f))
plot(f)
plot(abs(fft(f,inverse=TRUE)/length(f)))
plot(spt)
plot(spt,'l')
plot(1:319,spt,'l')
plot(abs(fft(f,inverse=TRUE)/length(f)))
plot(abs(fft(f,inverse=TRUE)/length(f)),'l')
plot(1:319,abs(fft(f,inverse=TRUE)/length(f)),'l')
plot(1:319,abs(fft(f,inverse=TRUE)/length(f)),'l')
f = fft(z)
f[abs(f)<10000]=0
f
plot(abs(fft(f,inverse=TRUE)/length(f)))
fft(f,inverse=TRUE)/length(f)
re(f)
?im
?real
?cplx
??cplx
??complex
Re(f)
plot(1:319,Re(f),'l')
plot(2:318,Re(f)[2:318],'l')
f=fft(spt)
fft(f,inverse=TRUE)/length(f)
Re(fft(f,inverse=TRUE)/length(f))
Re(fft(f,inverse=TRUE)/length(f))-f
Re(fft(f,inverse=TRUE)/length(f))-spt
max(Re(fft(f,inverse=TRUE)/length(f))-spt)
z=vector()
for(i in 1:360){z[i]=0}
for(i in 1:360){if i %% 20 == 0{z[i] = 10}}
for(i in 1:360){if(i %% 20 == 0){z[i] = 10}}
plot(z)
fft(z)
which(abs(fft(z))>10)
which(abs(fft(z))>5)
which(abs(fft(z))>1)
19-1
37-19
55-37
which(abs(fft(spt))>1000)
which(abs(fft(spt))>10000)
which(abs(fft(spt))>15000)
which(abs(fft(spt))>18000)
which(abs(fft(spt))>20000)
which(abs(fft(spt))>40000)
which(abs(fft(spt))>50000)
which(abs(fft(spt))>80000)
which(abs(fft(spt))>60000)
which(abs(fft(spt))>55000)
which(abs(fft(spt))>52000)
hist(abs(fft(spt)))
for(i in 1:360){z[i]=sin(i*pi/20)}
plot(z)
fft(z)
abs(fft(z))
which(abs(fft(z))>1)
for(i in 1:360){z[i]=sin(i*pi/40)}
which(abs(fft(z))>1)
plot(z)
which(abs(fft(z))>10)
for(i in 1:360){z[i]=sin(i*pi/60)}
plot(z)
which(abs(fft(z))>10)
which(abs(fft(z))>1)
plot(1:319,spt,'l')
plot(1:319,z,'l')
z = vector()
lambda = 0
# z[1] = lambda*mean(amt) + (1-lambda)*amt[1]
z[1] = amt[1]
for(i in 2:319){
z[i] = lambda*z[i-1] + (1-lambda)*amt[i]
}
plot(1:319,z,'l')
iris
p <- iris
View(p)
View(p)
View(p)
View(p)
write.table(p,'/Users/SONG/Desktop/Research/linear_learning',sep=',')
write.table(p,'/Users/SONG/Desktop/Research/linear_learning/iris.txt',sep=',')
p
p[2:5]
?write.table
write.table(p,'/Users/SONG/Desktop/Research/linear_learning/iris.txt',sep=',',quote=F)
write.table(p,'/Users/SONG/Desktop/Research/linear_learning/iris.txt',sep=',',quote=F,row.banes=F)
write.table(p,'/Users/SONG/Desktop/Research/linear_learning/iris.txt',sep=',',quote=F,row.nanes=F)
write.table(p,'/Users/SONG/Desktop/Research/linear_learning/iris.txt',sep=',',quote=F,row.names=F)
setwd("/Users/SONG/Desktop/Python Study/Elements-of-statistical-learning")
library(ggplot2)
## Least Squares
rm(list = ls())
data <- read.table("clean_data.txt", header = TRUE)
size <- dim(data)
m <- size[1]
one <- as.matrix(rep(1,m))
x <- cbind(one, as.matrix(data[,1:2]))
y <- as.matrix(data[,3])
th <- solve(t(x) %*% x, t(x) %*% y)
View(th)
